{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,QAItC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,SAEnDA,MAZPL,EAAOc,iBAAiB,UAgBxB,SAAoBC,GAClBA,EAAIC,iBAMJ,IAJA,IAAIC,EAAaC,OAAOlB,EAAOmB,SAASd,MAAMe,OAC1CC,EAAYH,OAAOlB,EAAOmB,SAASG,KAAKF,OACxCG,EAAcL,OAAOlB,EAAOmB,SAASK,OAAOJ,OAEvCK,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACrCtB,EAAcsB,EAAGR,GACdS,MAAK,SAAAC,GACJ7B,EAAA8B,OAAOC,QAAQF,MAEhBG,OAAM,SAAAH,GACL7B,EAAA8B,OAAOG,QAAQJ,MAGnBV,GAAcI,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('form');\n\nformEl.addEventListener('submit', submitForm);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n\nfunction submitForm(evt) {\n  evt.preventDefault();\n\n  let delayValue = Number(formEl.elements.delay.value);\n  let stepValue = Number(formEl.elements.step.value);\n  let amountValue = Number(formEl.elements.amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(result => {\n        Notify.success(result);\n      })\n      .catch(result => {\n        Notify.failure(result);\n      });\n\n    delayValue += stepValue;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","addEventListener","evt","preventDefault","delayValue","Number","elements","value","stepValue","step","amountValue","amount","i","then","result","Notify","success","catch","failure"],"version":3,"file":"03-promises.bc250b51.js.map"}